//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NepalTradeCenter.NepalTradeCenterServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShopCart", Namespace="http://schemas.datacontract.org/2004/07/NepalTradeCenterWCFService")]
    [System.SerializableAttribute()]
    public partial class ShopCart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/NepalTradeCenterWCFService")]
    [System.SerializableAttribute()]
    public partial class Item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int itemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NepalTradeCenter.NepalTradeCenterServiceReference.Product productField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int itemId {
            get {
                return this.itemIdField;
            }
            set {
                if ((this.itemIdField.Equals(value) != true)) {
                    this.itemIdField = value;
                    this.RaisePropertyChanged("itemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NepalTradeCenter.NepalTradeCenterServiceReference.Product product {
            get {
                return this.productField;
            }
            set {
                if ((object.ReferenceEquals(this.productField, value) != true)) {
                    this.productField = value;
                    this.RaisePropertyChanged("product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/NepalTradeCenterWCFService")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int activeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int categoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal costField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string imageAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string productCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime productCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int productIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal sellingPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int active {
            get {
                return this.activeField;
            }
            set {
                if ((this.activeField.Equals(value) != true)) {
                    this.activeField = value;
                    this.RaisePropertyChanged("active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int categoryId {
            get {
                return this.categoryIdField;
            }
            set {
                if ((this.categoryIdField.Equals(value) != true)) {
                    this.categoryIdField = value;
                    this.RaisePropertyChanged("categoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal cost {
            get {
                return this.costField;
            }
            set {
                if ((this.costField.Equals(value) != true)) {
                    this.costField = value;
                    this.RaisePropertyChanged("cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string imageAddress {
            get {
                return this.imageAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.imageAddressField, value) != true)) {
                    this.imageAddressField = value;
                    this.RaisePropertyChanged("imageAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string productCode {
            get {
                return this.productCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.productCodeField, value) != true)) {
                    this.productCodeField = value;
                    this.RaisePropertyChanged("productCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime productCreated {
            get {
                return this.productCreatedField;
            }
            set {
                if ((this.productCreatedField.Equals(value) != true)) {
                    this.productCreatedField = value;
                    this.RaisePropertyChanged("productCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int productId {
            get {
                return this.productIdField;
            }
            set {
                if ((this.productIdField.Equals(value) != true)) {
                    this.productIdField = value;
                    this.RaisePropertyChanged("productId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal sellingPrice {
            get {
                return this.sellingPriceField;
            }
            set {
                if ((this.sellingPriceField.Equals(value) != true)) {
                    this.sellingPriceField = value;
                    this.RaisePropertyChanged("sellingPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/NepalTradeCenterWCFService")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int activeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int categoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime createdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int parentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int active {
            get {
                return this.activeField;
            }
            set {
                if ((this.activeField.Equals(value) != true)) {
                    this.activeField = value;
                    this.RaisePropertyChanged("active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int categoryId {
            get {
                return this.categoryIdField;
            }
            set {
                if ((this.categoryIdField.Equals(value) != true)) {
                    this.categoryIdField = value;
                    this.RaisePropertyChanged("categoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime created {
            get {
                return this.createdField;
            }
            set {
                if ((this.createdField.Equals(value) != true)) {
                    this.createdField = value;
                    this.RaisePropertyChanged("created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int parent {
            get {
                return this.parentField;
            }
            set {
                if ((this.parentField.Equals(value) != true)) {
                    this.parentField = value;
                    this.RaisePropertyChanged("parent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/NepalTradeCenterWCFService")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int activeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int active {
            get {
                return this.activeField;
            }
            set {
                if ((this.activeField.Equals(value) != true)) {
                    this.activeField = value;
                    this.RaisePropertyChanged("active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userId {
            get {
                return this.userIdField;
            }
            set {
                if ((this.userIdField.Equals(value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NepalTradeCenterServiceReference.INepalTradeCenterService")]
    public interface INepalTradeCenterService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/newCart", ReplyAction="http://tempuri.org/INepalTradeCenterService/newCartResponse")]
        NepalTradeCenter.NepalTradeCenterServiceReference.ShopCart newCart();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/newCart", ReplyAction="http://tempuri.org/INepalTradeCenterService/newCartResponse")]
        System.Threading.Tasks.Task<NepalTradeCenter.NepalTradeCenterServiceReference.ShopCart> newCartAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/addItem", ReplyAction="http://tempuri.org/INepalTradeCenterService/addItemResponse")]
        bool addItem(NepalTradeCenter.NepalTradeCenterServiceReference.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/addItem", ReplyAction="http://tempuri.org/INepalTradeCenterService/addItemResponse")]
        System.Threading.Tasks.Task<bool> addItemAsync(NepalTradeCenter.NepalTradeCenterServiceReference.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/getItem", ReplyAction="http://tempuri.org/INepalTradeCenterService/getItemResponse")]
        NepalTradeCenter.NepalTradeCenterServiceReference.Item getItem(int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/getItem", ReplyAction="http://tempuri.org/INepalTradeCenterService/getItemResponse")]
        System.Threading.Tasks.Task<NepalTradeCenter.NepalTradeCenterServiceReference.Item> getItemAsync(int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/getItemList", ReplyAction="http://tempuri.org/INepalTradeCenterService/getItemListResponse")]
        System.Collections.Generic.List<NepalTradeCenter.NepalTradeCenterServiceReference.Item> getItemList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/getItemList", ReplyAction="http://tempuri.org/INepalTradeCenterService/getItemListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NepalTradeCenter.NepalTradeCenterServiceReference.Item>> getItemListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/setQuantityofItem", ReplyAction="http://tempuri.org/INepalTradeCenterService/setQuantityofItemResponse")]
        void setQuantityofItem(NepalTradeCenter.NepalTradeCenterServiceReference.Item item, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/setQuantityofItem", ReplyAction="http://tempuri.org/INepalTradeCenterService/setQuantityofItemResponse")]
        System.Threading.Tasks.Task setQuantityofItemAsync(NepalTradeCenter.NepalTradeCenterServiceReference.Item item, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/deleteItem", ReplyAction="http://tempuri.org/INepalTradeCenterService/deleteItemResponse")]
        bool deleteItem(int itemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/deleteItem", ReplyAction="http://tempuri.org/INepalTradeCenterService/deleteItemResponse")]
        System.Threading.Tasks.Task<bool> deleteItemAsync(int itemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/findItem", ReplyAction="http://tempuri.org/INepalTradeCenterService/findItemResponse")]
        NepalTradeCenter.NepalTradeCenterServiceReference.Item findItem(string productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/findItem", ReplyAction="http://tempuri.org/INepalTradeCenterService/findItemResponse")]
        System.Threading.Tasks.Task<NepalTradeCenter.NepalTradeCenterServiceReference.Item> findItemAsync(string productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/getCart", ReplyAction="http://tempuri.org/INepalTradeCenterService/getCartResponse")]
        NepalTradeCenter.NepalTradeCenterServiceReference.ShopCart getCart();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/getCart", ReplyAction="http://tempuri.org/INepalTradeCenterService/getCartResponse")]
        System.Threading.Tasks.Task<NepalTradeCenter.NepalTradeCenterServiceReference.ShopCart> getCartAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/RunDataInitializer", ReplyAction="http://tempuri.org/INepalTradeCenterService/RunDataInitializerResponse")]
        void RunDataInitializer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/RunDataInitializer", ReplyAction="http://tempuri.org/INepalTradeCenterService/RunDataInitializerResponse")]
        System.Threading.Tasks.Task RunDataInitializerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/insertProduct", ReplyAction="http://tempuri.org/INepalTradeCenterService/insertProductResponse")]
        int insertProduct(NepalTradeCenter.NepalTradeCenterServiceReference.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/insertProduct", ReplyAction="http://tempuri.org/INepalTradeCenterService/insertProductResponse")]
        System.Threading.Tasks.Task<int> insertProductAsync(NepalTradeCenter.NepalTradeCenterServiceReference.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/getAllProduct", ReplyAction="http://tempuri.org/INepalTradeCenterService/getAllProductResponse")]
        System.Collections.Generic.List<NepalTradeCenter.NepalTradeCenterServiceReference.Product> getAllProduct();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/getAllProduct", ReplyAction="http://tempuri.org/INepalTradeCenterService/getAllProductResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NepalTradeCenter.NepalTradeCenterServiceReference.Product>> getAllProductAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/getProductById", ReplyAction="http://tempuri.org/INepalTradeCenterService/getProductByIdResponse")]
        NepalTradeCenter.NepalTradeCenterServiceReference.Product getProductById(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/getProductById", ReplyAction="http://tempuri.org/INepalTradeCenterService/getProductByIdResponse")]
        System.Threading.Tasks.Task<NepalTradeCenter.NepalTradeCenterServiceReference.Product> getProductByIdAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/updateProduct", ReplyAction="http://tempuri.org/INepalTradeCenterService/updateProductResponse")]
        int updateProduct(int productId, string imageAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/updateProduct", ReplyAction="http://tempuri.org/INepalTradeCenterService/updateProductResponse")]
        System.Threading.Tasks.Task<int> updateProductAsync(int productId, string imageAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/getLastNProduct", ReplyAction="http://tempuri.org/INepalTradeCenterService/getLastNProductResponse")]
        System.Collections.Generic.List<NepalTradeCenter.NepalTradeCenterServiceReference.Product> getLastNProduct();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/getLastNProduct", ReplyAction="http://tempuri.org/INepalTradeCenterService/getLastNProductResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NepalTradeCenter.NepalTradeCenterServiceReference.Product>> getLastNProductAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/getAllCategory", ReplyAction="http://tempuri.org/INepalTradeCenterService/getAllCategoryResponse")]
        System.Collections.Generic.List<NepalTradeCenter.NepalTradeCenterServiceReference.Category> getAllCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/getAllCategory", ReplyAction="http://tempuri.org/INepalTradeCenterService/getAllCategoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NepalTradeCenter.NepalTradeCenterServiceReference.Category>> getAllCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/checkTableExist", ReplyAction="http://tempuri.org/INepalTradeCenterService/checkTableExistResponse")]
        bool checkTableExist();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/checkTableExist", ReplyAction="http://tempuri.org/INepalTradeCenterService/checkTableExistResponse")]
        System.Threading.Tasks.Task<bool> checkTableExistAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/insertCategory", ReplyAction="http://tempuri.org/INepalTradeCenterService/insertCategoryResponse")]
        void insertCategory(NepalTradeCenter.NepalTradeCenterServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/insertCategory", ReplyAction="http://tempuri.org/INepalTradeCenterService/insertCategoryResponse")]
        System.Threading.Tasks.Task insertCategoryAsync(NepalTradeCenter.NepalTradeCenterServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/getProductListByCategoryId", ReplyAction="http://tempuri.org/INepalTradeCenterService/getProductListByCategoryIdResponse")]
        System.Collections.Generic.List<NepalTradeCenter.NepalTradeCenterServiceReference.Product> getProductListByCategoryId(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/getProductListByCategoryId", ReplyAction="http://tempuri.org/INepalTradeCenterService/getProductListByCategoryIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NepalTradeCenter.NepalTradeCenterServiceReference.Product>> getProductListByCategoryIdAsync(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/authentiateUser", ReplyAction="http://tempuri.org/INepalTradeCenterService/authentiateUserResponse")]
        NepalTradeCenter.NepalTradeCenterServiceReference.User authentiateUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/authentiateUser", ReplyAction="http://tempuri.org/INepalTradeCenterService/authentiateUserResponse")]
        System.Threading.Tasks.Task<NepalTradeCenter.NepalTradeCenterServiceReference.User> authentiateUserAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/getCategoryById", ReplyAction="http://tempuri.org/INepalTradeCenterService/getCategoryByIdResponse")]
        NepalTradeCenter.NepalTradeCenterServiceReference.Category getCategoryById(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INepalTradeCenterService/getCategoryById", ReplyAction="http://tempuri.org/INepalTradeCenterService/getCategoryByIdResponse")]
        System.Threading.Tasks.Task<NepalTradeCenter.NepalTradeCenterServiceReference.Category> getCategoryByIdAsync(int categoryId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INepalTradeCenterServiceChannel : NepalTradeCenter.NepalTradeCenterServiceReference.INepalTradeCenterService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NepalTradeCenterServiceClient : System.ServiceModel.ClientBase<NepalTradeCenter.NepalTradeCenterServiceReference.INepalTradeCenterService>, NepalTradeCenter.NepalTradeCenterServiceReference.INepalTradeCenterService {
        
        public NepalTradeCenterServiceClient() {
        }
        
        public NepalTradeCenterServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NepalTradeCenterServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NepalTradeCenterServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NepalTradeCenterServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NepalTradeCenter.NepalTradeCenterServiceReference.ShopCart newCart() {
            return base.Channel.newCart();
        }
        
        public System.Threading.Tasks.Task<NepalTradeCenter.NepalTradeCenterServiceReference.ShopCart> newCartAsync() {
            return base.Channel.newCartAsync();
        }
        
        public bool addItem(NepalTradeCenter.NepalTradeCenterServiceReference.Item item) {
            return base.Channel.addItem(item);
        }
        
        public System.Threading.Tasks.Task<bool> addItemAsync(NepalTradeCenter.NepalTradeCenterServiceReference.Item item) {
            return base.Channel.addItemAsync(item);
        }
        
        public NepalTradeCenter.NepalTradeCenterServiceReference.Item getItem(int itemId) {
            return base.Channel.getItem(itemId);
        }
        
        public System.Threading.Tasks.Task<NepalTradeCenter.NepalTradeCenterServiceReference.Item> getItemAsync(int itemId) {
            return base.Channel.getItemAsync(itemId);
        }
        
        public System.Collections.Generic.List<NepalTradeCenter.NepalTradeCenterServiceReference.Item> getItemList() {
            return base.Channel.getItemList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NepalTradeCenter.NepalTradeCenterServiceReference.Item>> getItemListAsync() {
            return base.Channel.getItemListAsync();
        }
        
        public void setQuantityofItem(NepalTradeCenter.NepalTradeCenterServiceReference.Item item, int quantity) {
            base.Channel.setQuantityofItem(item, quantity);
        }
        
        public System.Threading.Tasks.Task setQuantityofItemAsync(NepalTradeCenter.NepalTradeCenterServiceReference.Item item, int quantity) {
            return base.Channel.setQuantityofItemAsync(item, quantity);
        }
        
        public bool deleteItem(int itemID) {
            return base.Channel.deleteItem(itemID);
        }
        
        public System.Threading.Tasks.Task<bool> deleteItemAsync(int itemID) {
            return base.Channel.deleteItemAsync(itemID);
        }
        
        public NepalTradeCenter.NepalTradeCenterServiceReference.Item findItem(string productId) {
            return base.Channel.findItem(productId);
        }
        
        public System.Threading.Tasks.Task<NepalTradeCenter.NepalTradeCenterServiceReference.Item> findItemAsync(string productId) {
            return base.Channel.findItemAsync(productId);
        }
        
        public NepalTradeCenter.NepalTradeCenterServiceReference.ShopCart getCart() {
            return base.Channel.getCart();
        }
        
        public System.Threading.Tasks.Task<NepalTradeCenter.NepalTradeCenterServiceReference.ShopCart> getCartAsync() {
            return base.Channel.getCartAsync();
        }
        
        public void RunDataInitializer() {
            base.Channel.RunDataInitializer();
        }
        
        public System.Threading.Tasks.Task RunDataInitializerAsync() {
            return base.Channel.RunDataInitializerAsync();
        }
        
        public int insertProduct(NepalTradeCenter.NepalTradeCenterServiceReference.Product product) {
            return base.Channel.insertProduct(product);
        }
        
        public System.Threading.Tasks.Task<int> insertProductAsync(NepalTradeCenter.NepalTradeCenterServiceReference.Product product) {
            return base.Channel.insertProductAsync(product);
        }
        
        public System.Collections.Generic.List<NepalTradeCenter.NepalTradeCenterServiceReference.Product> getAllProduct() {
            return base.Channel.getAllProduct();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NepalTradeCenter.NepalTradeCenterServiceReference.Product>> getAllProductAsync() {
            return base.Channel.getAllProductAsync();
        }
        
        public NepalTradeCenter.NepalTradeCenterServiceReference.Product getProductById(int productId) {
            return base.Channel.getProductById(productId);
        }
        
        public System.Threading.Tasks.Task<NepalTradeCenter.NepalTradeCenterServiceReference.Product> getProductByIdAsync(int productId) {
            return base.Channel.getProductByIdAsync(productId);
        }
        
        public int updateProduct(int productId, string imageAddress) {
            return base.Channel.updateProduct(productId, imageAddress);
        }
        
        public System.Threading.Tasks.Task<int> updateProductAsync(int productId, string imageAddress) {
            return base.Channel.updateProductAsync(productId, imageAddress);
        }
        
        public System.Collections.Generic.List<NepalTradeCenter.NepalTradeCenterServiceReference.Product> getLastNProduct() {
            return base.Channel.getLastNProduct();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NepalTradeCenter.NepalTradeCenterServiceReference.Product>> getLastNProductAsync() {
            return base.Channel.getLastNProductAsync();
        }
        
        public System.Collections.Generic.List<NepalTradeCenter.NepalTradeCenterServiceReference.Category> getAllCategory() {
            return base.Channel.getAllCategory();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NepalTradeCenter.NepalTradeCenterServiceReference.Category>> getAllCategoryAsync() {
            return base.Channel.getAllCategoryAsync();
        }
        
        public bool checkTableExist() {
            return base.Channel.checkTableExist();
        }
        
        public System.Threading.Tasks.Task<bool> checkTableExistAsync() {
            return base.Channel.checkTableExistAsync();
        }
        
        public void insertCategory(NepalTradeCenter.NepalTradeCenterServiceReference.Category category) {
            base.Channel.insertCategory(category);
        }
        
        public System.Threading.Tasks.Task insertCategoryAsync(NepalTradeCenter.NepalTradeCenterServiceReference.Category category) {
            return base.Channel.insertCategoryAsync(category);
        }
        
        public System.Collections.Generic.List<NepalTradeCenter.NepalTradeCenterServiceReference.Product> getProductListByCategoryId(int categoryId) {
            return base.Channel.getProductListByCategoryId(categoryId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NepalTradeCenter.NepalTradeCenterServiceReference.Product>> getProductListByCategoryIdAsync(int categoryId) {
            return base.Channel.getProductListByCategoryIdAsync(categoryId);
        }
        
        public NepalTradeCenter.NepalTradeCenterServiceReference.User authentiateUser(string username, string password) {
            return base.Channel.authentiateUser(username, password);
        }
        
        public System.Threading.Tasks.Task<NepalTradeCenter.NepalTradeCenterServiceReference.User> authentiateUserAsync(string username, string password) {
            return base.Channel.authentiateUserAsync(username, password);
        }
        
        public NepalTradeCenter.NepalTradeCenterServiceReference.Category getCategoryById(int categoryId) {
            return base.Channel.getCategoryById(categoryId);
        }
        
        public System.Threading.Tasks.Task<NepalTradeCenter.NepalTradeCenterServiceReference.Category> getCategoryByIdAsync(int categoryId) {
            return base.Channel.getCategoryByIdAsync(categoryId);
        }
    }
}
